name: Nightly Build

on:
  schedule:
    - cron: '0 2 * * *' # Run at 2 AM UTC daily
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  nightly-build:
    if: github.repository_owner == 'your-username' # Replace with your GitHub username
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
            arch: 'aarch64'
            
          - platform: 'macos-latest'  
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
            
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}

      - name: Upload nightly artifacts
        uses: actions/upload-artifact@v4
        with:
          name: steno-nightly-${{ matrix.arch }}-${{ matrix.platform }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
            src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi
          retention-days: 7

  cleanup-old-artifacts:
    runs-on: ubuntu-latest
    needs: nightly-build
    
    steps:
      - name: Delete old artifacts
        uses: geekyeggo/delete-artifact@v4
        with:
          name: |
            steno-nightly-*
          skipRecent: 3