name: Build Windows Application

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Install build dependencies (Windows)
      run: |
        # Install WebView2
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
        Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent /install" -Wait
        # Install CMake
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        # Install Visual Studio Build Tools
        choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
        refreshenv

    - name: Build whisper.cpp library (Windows)
      run: |
        cd src-tauri/lib/whisper.cpp
        mkdir build -ErrorAction SilentlyContinue
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release
      shell: powershell

    - name: Build Tauri app for Windows
      run: npm run build:windows
      env:
        RUST_BACKTRACE: 1

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: |
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-darwin,x86_64-apple-darwin

    - name: Install build dependencies (macOS)
      run: |
        brew install cmake

    - name: Build whisper.cpp library (macOS)
      run: |
        cd src-tauri/lib/whisper.cpp
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release

    - name: Build Tauri app for macOS
      run: npm run tauri:build

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
        retention-days: 30