name: Build Windows Application

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Cache whisper.cpp build (Windows)
      uses: actions/cache@v4
      with:
        path: src-tauri/lib/whisper.cpp/build
        key: windows-x64-whisper-${{ hashFiles('src-tauri/lib/whisper.cpp/**/*.cpp', 'src-tauri/lib/whisper.cpp/**/*.h', 'src-tauri/lib/whisper.cpp/CMakeLists.txt') }}
        restore-keys: |
          windows-x64-whisper-

    - name: Setup MSVC (Windows)
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Install WebView2 (Windows)
      run: |
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=2124703" -OutFile "MicrosoftEdgeWebview2Setup.exe"
        Start-Process -FilePath "MicrosoftEdgeWebview2Setup.exe" -ArgumentList "/silent /install" -Wait
      shell: powershell

    - name: Verify build tools (Windows)
      run: |
        cmake --version
        cl.exe 2>&1 | findstr "Version"
      shell: cmd

    - name: Build whisper.cpp library (Windows)
      run: |
        cd src-tauri/lib/whisper.cpp
        if not exist build mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DBUILD_SHARED_LIBS=OFF -DGGML_STATIC=ON
        cmake --build . --config Release --parallel
      shell: cmd

    - name: Verify whisper.cpp build artifacts (Windows)
      run: |
        cd src-tauri/lib/whisper.cpp/build
        echo "=== Build directory structure ==="
        dir /s *.lib
        echo "=== Checking specific library locations ==="
        if exist "src\Release\whisper.lib" (echo "✓ Found whisper.lib") else (echo "✗ Missing whisper.lib")
        if exist "ggml\src\Release\ggml-base.lib" (echo "✓ Found ggml-base.lib") else (echo "✗ Missing ggml-base.lib")
        if exist "ggml\src\ggml-blas\Release\ggml-blas.lib" (echo "✓ Found ggml-blas.lib (BLAS enabled)") else (echo "⚠ ggml-blas.lib not found (BLAS disabled - normal on Windows)")
        if exist "ggml\src\Release\ggml.lib" (echo "✓ Found ggml.lib") else (echo "✗ Missing ggml.lib")
      shell: cmd

    - name: Build Tauri app for Windows
      run: npm run build:windows
      env:
        RUST_BACKTRACE: 1

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: |
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
          src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-darwin,x86_64-apple-darwin

    - name: Cache whisper.cpp build (macOS)
      uses: actions/cache@v4
      with:
        path: src-tauri/lib/whisper.cpp/build
        key: macos-whisper-${{ hashFiles('src-tauri/lib/whisper.cpp/**/*.cpp', 'src-tauri/lib/whisper.cpp/**/*.h', 'src-tauri/lib/whisper.cpp/CMakeLists.txt') }}
        restore-keys: |
          macos-whisper-

    - name: Verify build tools (macOS)
      run: |
        cmake --version
        xcode-select -p

    - name: Build whisper.cpp library (macOS)
      run: |
        cd src-tauri/lib/whisper.cpp
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --parallel

    - name: Build Tauri app for macOS
      run: npm run tauri:build

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
        retention-days: 30